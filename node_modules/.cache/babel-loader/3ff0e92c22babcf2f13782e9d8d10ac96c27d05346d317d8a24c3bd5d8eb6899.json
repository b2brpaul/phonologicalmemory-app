{"ast":null,"code":"var _jsxFileName = \"/Users/macbookbro/phonologicalmemory-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState(''); // Nouvel état pour la séquence inversée\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n  function generateSequence() {\n    const sequence = Array.from({\n      length: numDigits\n    }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setCountdown(10);\n  }\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      setReversedSequence([...digitSequence].reverse().join('')); // Définit l'état de la séquence inversée avant le timeout\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n  }, [digitSequence]);\n  function checkSequence() {\n    const userSequenceWithoutSpaces = userSequence.replace(/\\s/g, '');\n    setUserSequence(\"\");\n    setShowSubmit(false);\n    if (userSequenceWithoutSpaces === reversedSequence) {\n      // Comparaison avec reversedSequence au lieu de digitSequence\n      setAlertMessage('Correct!');\n    } else {\n      setAlertMessage(`Incorrect, try again. Expected sequence was: ${reversedSequence}`);\n    }\n  }\n  function resetGame() {\n    setNumDigits(5);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence(\"\");\n    setAlertMessage(\"\");\n    setReversedSequence(\"\"); // Réinitialise également reversedSequence\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n      active: alertMessage === 'Correct!',\n      config: confettiConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: numDigits,\n      onChange: e => setNumDigits(Number(e.target.value)),\n      children: Array.from({\n        length: 16\n      }, (_, i) => i + 5).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: num,\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSequence,\n      children: \"Generate Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sequence-container\",\n      children: digitSequence.map((digit, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sequence-item\",\n        children: digit\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showSubmit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userSequence,\n        onChange: e => setUserSequence(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkSequence,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), alertMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"904UW3cvLxQWKfM+VxuTqAtX9p8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","countdown","setCountdown","numDigits","setNumDigits","digitSequence","setDigitSequence","showSubmit","setShowSubmit","userSequence","setUserSequence","alertMessage","setAlertMessage","reversedSequence","setReversedSequence","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","generateSequence","sequence","Array","from","length","Math","floor","random","reverse","join","timer","setTimeout","clearTimeout","checkSequence","userSequenceWithoutSpaces","replace","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","active","config","value","onChange","e","Number","target","_","i","map","num","onClick","digit","type","_c","$RefreshReg$"],"sources":["/Users/macbookbro/phonologicalmemory-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\n\n\nfunction App() {\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState(''); // Nouvel état pour la séquence inversée\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n\n\n  function generateSequence() {\n    const sequence = Array.from({ length: numDigits }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setCountdown(10);\n  }\n\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      setReversedSequence([...digitSequence].reverse().join('')); // Définit l'état de la séquence inversée avant le timeout\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n  }, [digitSequence]);\n\n  function checkSequence() {\n    const userSequenceWithoutSpaces = userSequence.replace(/\\s/g, '');\n    setUserSequence(\"\");\n    setShowSubmit(false);\n    if (userSequenceWithoutSpaces === reversedSequence) { // Comparaison avec reversedSequence au lieu de digitSequence\n      setAlertMessage('Correct!');\n    } else {\n      setAlertMessage(`Incorrect, try again. Expected sequence was: ${reversedSequence}`);\n    }\n  }\n\n  function resetGame() {\n    setNumDigits(5);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence(\"\");\n    setAlertMessage(\"\");\n    setReversedSequence(\"\"); // Réinitialise également reversedSequence\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <Confetti active={alertMessage === 'Correct!'} config={confettiConfig} />\n      <select value={numDigits} onChange={e => setNumDigits(Number(e.target.value))}>\n        {Array.from({ length: 16 }, (_, i) => i + 5).map(num => (\n          <option key={num} value={num}>{num}</option>\n        ))}\n      </select>\n      <button onClick={generateSequence}>Generate Sequence</button>\n      <div className=\"sequence-container\">\n  {digitSequence.map((digit, i) => (\n    <div key={i} className=\"sequence-item\">{digit}</div>\n  ))}\n</div>\n      {showSubmit && (\n        <>\n          <input type=\"text\" value={userSequence} onChange={e => setUserSequence(e.target.value)} />\n          <button onClick={checkSequence}>Submit</button>\n        </>\n      )}\n      {alertMessage && (\n        <>\n          <p>{alertMessage}</p>\n          <button onClick={resetGame}>Try again</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}