{"ast":null,"code":"var _jsxFileName = \"/Users/macbookbro/phonologicalmemory-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState(''); // Nouvel état pour la séquence inversée\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n  function generateSequence() {\n    const sequence = Array.from({\n      length: numDigits\n    }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setCountdown(10);\n  }\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      setReversedSequence([...digitSequence].reverse().join('')); // Définit l'état de la séquence inversée avant le timeout\n\n      setCountdown(10); // Initialise le compte à rebours à 10\n\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n\n      // Crée un intervalle qui décrémente le compte à rebours chaque seconde\n      const countdownTimer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n      return () => {\n        clearTimeout(timer);\n        clearInterval(countdownTimer); // Nettoie l'intervalle lorsque le composant est démonté ou la séquence change\n      };\n    }\n  }, [digitSequence]);\n  function checkSequence() {\n    if (userSequence.length !== reversedSequence.length || userSequence.some((num, i) => num !== reversedSequence[i])) {\n      setAlertMessage(`Incorrect, try again. Expected sequence was: ${[...reversedSequence].join(' ')}`);\n    } else {\n      setAlertMessage('Correct!');\n      setScore(prevScore => prevScore + numDigits - 4); // Incrémente le score en fonction du nombre de chiffres\n    }\n\n    setUserSequence([]);\n    setShowSubmit(false);\n  }\n  function resetGame() {\n    setNumDigits(5);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence(\"\");\n    setAlertMessage(\"\");\n    setReversedSequence(\"\"); // Réinitialise également reversedSequence\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonologic Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n      active: alertMessage === 'Correct!',\n      config: confettiConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" I want the sequence to be :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numDigits,\n        onChange: e => setNumDigits(Number(e.target.value)),\n        children: Array.from({\n          length: 16\n        }, (_, i) => i + 5).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), \"numbers long\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click \\\"Generate Sequence\\\" to start. A random sequence of numbers will be shown. Memorize this sequence, as it will disappear after 10 seconds. You will then have to enter the sequence in reverse.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSequence,\n      children: \"Generate Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sequence-container\",\n      children: digitSequence.map((digit, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sequence-item\",\n        children: digit\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showSubmit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Entered sequence: \", userSequence.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), Array.from({\n        length: 10\n      }, (_, i) => i).map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUserSequence(prevSequence => [...prevSequence, num]),\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkSequence,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true), alertMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"abGP1pueJKS12iEk/DFO52FKdTs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","score","setScore","countdown","setCountdown","numDigits","setNumDigits","digitSequence","setDigitSequence","showSubmit","setShowSubmit","userSequence","setUserSequence","alertMessage","setAlertMessage","reversedSequence","setReversedSequence","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","generateSequence","sequence","Array","from","length","Math","floor","random","reverse","join","timer","setTimeout","countdownTimer","setInterval","prevCountdown","clearTimeout","clearInterval","checkSequence","some","num","i","prevScore","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","active","config","value","onChange","e","Number","target","_","map","onClick","digit","prevSequence","_c","$RefreshReg$"],"sources":["/Users/macbookbro/phonologicalmemory-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\n\n\nfunction App() {\n  \n  const [score, setScore] = useState(0);\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState(''); // Nouvel état pour la séquence inversée\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n\n\n  function generateSequence() {\n    const sequence = Array.from({ length: numDigits }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setCountdown(10);\n  }\n\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      \n      setReversedSequence([...digitSequence].reverse().join('')); // Définit l'état de la séquence inversée avant le timeout\n\n      setCountdown(10); // Initialise le compte à rebours à 10\n\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n\n      // Crée un intervalle qui décrémente le compte à rebours chaque seconde\n      const countdownTimer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n\n      return () => {\n        clearTimeout(timer);\n        clearInterval(countdownTimer); // Nettoie l'intervalle lorsque le composant est démonté ou la séquence change\n      }\n    }\n  }, [digitSequence]);\n\n\nfunction checkSequence() {\n  if (userSequence.length !== reversedSequence.length || \n      userSequence.some((num, i) => num !== reversedSequence[i])) {\n    setAlertMessage(`Incorrect, try again. Expected sequence was: ${[...reversedSequence].join(' ')}`);\n  } else {\n    setAlertMessage('Correct!');\n    setScore(prevScore => prevScore + numDigits - 4); // Incrémente le score en fonction du nombre de chiffres\n  }\n  setUserSequence([]);\n  setShowSubmit(false);\n}\n\n\n  function resetGame() {\n    setNumDigits(5);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence(\"\");\n    setAlertMessage(\"\");\n    setReversedSequence(\"\"); // Réinitialise également reversedSequence\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Phonologic Memory Game</h1>\n      <h2>Your Score: {score}</h2>\n\n      <Confetti active={alertMessage === 'Correct!'} config={confettiConfig} />\n      <p> I want the sequence to be :\n      <select value={numDigits} onChange={e => setNumDigits(Number(e.target.value))}>\n        {Array.from({ length: 16 }, (_, i) => i + 5).map(num => (\n          <option key={num} value={num}>{num}</option>\n        ))}\n      </select>\n       numbers long</p>\n\n      <p>Click \"Generate Sequence\" to start. A random sequence of numbers will be shown. Memorize this sequence, as it will disappear after 10 seconds. You will then have to enter the sequence in reverse.</p>\n      <button onClick={generateSequence}>Generate Sequence</button>\n      <p>Time left: {countdown}</p>\n      <div className=\"sequence-container\">\n\n  {digitSequence.map((digit, i) => (\n    <div key={i} className=\"sequence-item\">{digit}</div>\n\n  ))}\n</div>\n      {showSubmit && (\n  <>\n    <p>Entered sequence: {userSequence.join(' ')}</p>\n    {Array.from({ length: 10 }, (_, i) => i).map(num => (\n      <button key={num} onClick={() => setUserSequence(prevSequence => [...prevSequence, num])}>{num}</button>\n    ))}\n    <button onClick={checkSequence}>Submit</button>\n  </>\n)}\n      {alertMessage && (\n        <>\n          <p>{alertMessage}</p>\n          <button onClick={resetGame}>Try again</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}