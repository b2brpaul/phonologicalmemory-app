{"ast":null,"code":"var _jsxFileName = \"/Users/macbookbro/Desktop/ProjetGit/phonologicalmemory-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [score, setScore] = useState(0);\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(10);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState([]);\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n  function generateSequence() {\n    const sequence = Array.from({\n      length: numDigits\n    }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setReversedSequence([...sequence].reverse());\n    setUserSequence(Array(numDigits).fill('-')); // Initialise userSequence with dashes\n    setCountdown(10);\n  }\n  function Modal({\n    onClose,\n    children\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n  function handleClick(num) {\n    setUserSequence(prevSequence => {\n      const index = prevSequence.indexOf('-');\n      if (index !== -1) {\n        return [...prevSequence.slice(0, index), num, ...prevSequence.slice(index + 1)];\n      }\n      return [...prevSequence, num];\n    });\n  }\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      setCountdown(10);\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n      const countdownTimer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n      return () => {\n        clearTimeout(timer);\n        clearInterval(countdownTimer);\n      };\n    }\n  }, [digitSequence]);\n  useEffect(() => {\n    if (showSubmit) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n  }, [showSubmit]);\n  function checkSequence() {\n    if (userSequence.join(' ') !== reversedSequence.join(' ')) {\n      setAlertMessage(`Incorrect, try again. Expected sequence was: ${reversedSequence.join(' ')}`);\n    } else {\n      setAlertMessage('Correct!');\n      setScore(prevScore => prevScore + numDigits - 4);\n    }\n    setUserSequence([]);\n    setShowSubmit(false);\n  }\n  function resetGame() {\n    setNumDigits(10);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence([]);\n    setAlertMessage(\"\");\n    setReversedSequence([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonologic Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n      active: alertMessage === 'Correct!',\n      config: confettiConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Let's start. I want the sequence to be :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numDigits,\n        onChange: e => setNumDigits(Number(e.target.value)),\n        children: Array.from({\n          length: 16\n        }, (_, i) => i + 5).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), \"numbers long\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click \\\"Generate Sequence\\\" to start. A random sequence of numbers will be shown. Memorize this sequence, as it will disappear after 10 seconds. You will then have to enter the sequence in reverse.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSequence,\n      children: \"Generate Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sequence-container\",\n      children: digitSequence.map((digit, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sequence-item\",\n        children: digit\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showSubmit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter the sequence now:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-sequence-container\",\n        children: userSequence.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sequence-item entered-number\",\n          children: num\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-pad\",\n        children: [[...Array(9).keys()].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sequence-item number-pad-item\",\n          onClick: () => handleClick(i + 1),\n          children: i + 1\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sequence-item number-pad-item\",\n          onClick: () => handleClick(0),\n          children: \"0\"\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sequence-item number-pad-item delete\",\n          onClick: () => setUserSequence(prevSequence => prevSequence.slice(0, -1)),\n          children: \"Del\"\n        }, \"delete\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: checkSequence,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), alertMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: resetGame,\n        children: \"Try again \\u21BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dm50bPHmBKvwfGzXUUDdPSBHCR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showModal","setShowModal","score","setScore","countdown","setCountdown","numDigits","setNumDigits","digitSequence","setDigitSequence","showSubmit","setShowSubmit","userSequence","setUserSequence","alertMessage","setAlertMessage","reversedSequence","setReversedSequence","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","generateSequence","sequence","Array","from","length","Math","floor","random","reverse","fill","Modal","onClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","num","prevSequence","index","indexOf","slice","timer","setTimeout","countdownTimer","setInterval","prevCountdown","clearTimeout","clearInterval","window","scrollTo","document","body","scrollHeight","checkSequence","join","prevScore","resetGame","active","config","value","onChange","e","Number","target","_","i","map","digit","keys","type","_c","$RefreshReg$"],"sources":["/Users/macbookbro/Desktop/ProjetGit/phonologicalmemory-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Confetti from 'react-dom-confetti';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  const [score, setScore] = useState(0);\n  const [countdown, setCountdown] = useState(null);\n  const [numDigits, setNumDigits] = useState(10);\n  const [digitSequence, setDigitSequence] = useState([]);\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [userSequence, setUserSequence] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [reversedSequence, setReversedSequence] = useState([]);\n  const confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 20,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n\n  function generateSequence() {\n    const sequence = Array.from({ length: numDigits }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n    setReversedSequence([...sequence].reverse());\n    setUserSequence(Array(numDigits).fill('-'));  // Initialise userSequence with dashes\n    setCountdown(10);\n  }\n\nfunction Modal({ onClose, children }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        {children}\n        <button onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n}\n\n  function handleClick(num) {\n    setUserSequence(prevSequence => {\n      const index = prevSequence.indexOf('-');\n      if (index !== -1) {\n        return [...prevSequence.slice(0, index), num, ...prevSequence.slice(index + 1)];\n      }\n      return [...prevSequence, num];\n    });\n  }\n\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      setCountdown(10);\n      const timer = setTimeout(() => {\n        setDigitSequence([]);\n        setShowSubmit(true);\n      }, 10000);\n      const countdownTimer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n      return () => {\n        clearTimeout(timer);\n        clearInterval(countdownTimer);\n      }\n    }\n  }, [digitSequence]);\n  useEffect(() => {\n  if (showSubmit) {\n    window.scrollTo(0, document.body.scrollHeight);\n    }\n  }, [showSubmit]);\n\n  function checkSequence() {\n    if (userSequence.join(' ') !== reversedSequence.join(' ')) {\n      setAlertMessage(`Incorrect, try again. Expected sequence was: ${reversedSequence.join(' ')}`);\n    } else {\n      setAlertMessage('Correct!');\n      setScore(prevScore => prevScore + numDigits - 4);\n    }\n    setUserSequence([]);\n    setShowSubmit(false);\n  }\n\n  function resetGame() {\n    setNumDigits(10);\n    setDigitSequence([]);\n    setShowSubmit(false);\n    setUserSequence([]);\n    setAlertMessage(\"\");\n    setReversedSequence([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Phonologic Memory Game</h1>\n      <h2>Your Score: {score}</h2>\n      <Confetti active={alertMessage === 'Correct!'} config={confettiConfig} />\n      <p> Let's start. I want the sequence to be :\n        <select value={numDigits} onChange={e => setNumDigits(Number(e.target.value))}>\n          {Array.from({ length: 16 }, (_, i) => i + 5).map(num => (\n            <option key={num} value={num}>{num}</option>\n          ))}\n        </select>\n         numbers long\n      </p>\n      <p>Click \"Generate Sequence\" to start. A random sequence of numbers will be shown. Memorize this sequence, as it will disappear after 10 seconds. You will then have to enter the sequence in reverse.</p>\n      <button onClick={generateSequence}>Generate Sequence</button>\n      <p>Time left: {countdown}</p>\n      <div className=\"sequence-container\">\n        {digitSequence.map((digit, i) => (\n          <div key={i} className=\"sequence-item\">{digit}</div>\n        ))}\n      </div>\n      {showSubmit && (\n        <>\n              <p>Enter the sequence now:</p>\n          <div className=\"user-sequence-container\">\n            {userSequence.map((num, i) => (\n              <div key={i} className=\"sequence-item entered-number\">{num}</div>\n            ))}\n          </div>\n          <div className=\"number-pad\">\n            {[...Array(9).keys()].map((_, i) => (\n              <div \n                key={i+1} \n                className=\"sequence-item number-pad-item\" \n                onClick={() => handleClick(i+1)}\n              >\n                {i+1}\n\n              </div>\n\n            ))}\n            <div></div>\n            <div \n              key={0} \n              className=\"sequence-item number-pad-item\" \n              onClick={() => handleClick(0)}\n            >\n              0\n            \n            </div>\n<div \n  key={\"delete\"} \n  className=\"sequence-item number-pad-item delete\" \n  onClick={() => setUserSequence(prevSequence => prevSequence.slice(0, -1))}\n>\n  Del\n</div>\n            <div></div>\n          </div>\n          <button type=\"submit\" onClick={checkSequence}>Submit</button>\n        </>\n      )}\n      {alertMessage && (\n        <>\n          <p>{alertMessage}</p>\n          <button type=\"reset\" onClick={resetGame}>Try again ↺</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}