{"ast":null,"code":"var _jsxFileName = \"/Users/macbookbro/phonologicalmemory-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n  function generateSequence() {\n    const sequence = Array.from({\n      length: numDigits\n    }, () => Math.floor(Math.random() * 10));\n    setDigitSequence(sequence);\n  }\n  useEffect(() => {\n    if (digitSequence.length > 0) {\n      const timer = setTimeout(() => setDigitSequence([]), 10000);\n      return () => clearTimeout(timer);\n    }\n  }, [digitSequence]);\n  const [userSequence, setUserSequence] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: numDigits,\n      onChange: e => setNumDigits(Number(e.target.value)),\n      children: Array.from({\n        length: 16\n      }, (_, i) => i + 5).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: num,\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSequence,\n      children: \"Generate Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: digitSequence.join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zElP5Q91AIEDfGlCokQMvF/oUjo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","App","_s","numDigits","setNumDigits","digitSequence","setDigitSequence","generateSequence","sequence","Array","from","length","Math","floor","random","timer","setTimeout","clearTimeout","userSequence","setUserSequence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","_","i","map","num","onClick","join","_c","$RefreshReg$"],"sources":["/Users/macbookbro/phonologicalmemory-app/src/App.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.svg';\n\n\nfunction App() {\n  const [numDigits, setNumDigits] = useState(5);\n  const [digitSequence, setDigitSequence] = useState([]);\n\nfunction generateSequence() {\n  const sequence = Array.from({ length: numDigits }, () => Math.floor(Math.random() * 10));\n  setDigitSequence(sequence);\n}\nuseEffect(() => {\n  if (digitSequence.length > 0) {\n    const timer = setTimeout(() => setDigitSequence([]), 10000);\n    return () => clearTimeout(timer);\n  }\n}, [digitSequence]);\n\nconst [userSequence, setUserSequence] = useState(\"\");\n\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <select value={numDigits} onChange={e => setNumDigits(Number(e.target.value))}>\n        {Array.from({ length: 16 }, (_, i) => i + 5).map(num => (\n          <option key={num} value={num}>{num}</option>\n  ))}\n</select>\n<button onClick={generateSequence}>Generate Sequence</button>\n<p>{digitSequence.join(' ')}</p>\n</div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAE,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,SAASW,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAU,CAAC,EAAE,MAAMS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IACxFR,gBAAgB,CAACE,QAAQ,CAAC;EAC5B;EACAX,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAa,CAACM,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMI,KAAK,GAAGC,UAAU,CAAC,MAAMV,gBAAgB,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MAC3D,OAAO,MAAMW,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACV,aAAa,CAAC,CAAC;EAEnB,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAGlD,oBACEI,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAQ0B,KAAK,EAAEvB,SAAU;MAACwB,QAAQ,EAAEC,CAAC,IAAIxB,YAAY,CAACyB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;MAAAL,QAAA,EAC3EZ,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACoB,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,iBAClDlC,OAAA;QAAkB0B,KAAK,EAAEQ,GAAI;QAAAb,QAAA,EAAEa;MAAG,GAArBA,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTzB,OAAA;MAAQmC,OAAO,EAAE5B,gBAAiB;MAAAc,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DzB,OAAA;MAAAqB,QAAA,EAAIhB,aAAa,CAAC+B,IAAI,CAAC,GAAG;IAAC;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEN;AAACvB,EAAA,CA9BQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}